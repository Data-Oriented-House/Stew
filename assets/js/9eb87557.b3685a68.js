"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[427],{26520:e=>{e.exports=JSON.parse('{"functions":[{"name":"world","desc":"Creates a new world.\\n\\n```lua\\n-- Your very own world to toy with\\nlocal myWorld = Stew.world()\\n\\n-- If you\'d like to listen for certain events, you can define these callbacks:\\n\\n-- Called whenever a new factory is built\\nfunction myWorld.built(archetype: Archetype) end\\n\\n-- Called whenever a new entity is registered\\nfunction myWorld.spawned(entity) end\\n\\n-- Called whenever an entity is unregistered\\nfunction myWorld.killed(entity) end\\n\\n-- Called whenever an entity recieves a component\\nfunction myWorld.added(factory, entity, component) end\\n\\n-- Called whenever an entity loses a component\\nfunction myWorld.removed(factory, entity, component) end\\n```","params":[],"returns":[{"desc":"","lua_type":"World"}],"function_type":"static","source":{"line":199,"path":"src/init.lua"}}],"properties":[],"types":[{"name":"World","desc":"","fields":[{"name":"added","lua_type":"(factory: Factory, entity: any, component: any)","desc":""},{"name":"removed","lua_type":"(factory: Factory, entity: any, component: any)","desc":""},{"name":"spawned","lua_type":"(entity: any) -> ()","desc":""},{"name":"killed","lua_type":"(entity: any) -> ()","desc":""},{"name":"built","lua_type":"(archetype: Archetype) -> ()","desc":""}],"source":{"line":170,"path":"src/init.lua"}}],"name":"Stew","desc":"","source":{"line":73,"path":"src/init.lua"}}')}}]);